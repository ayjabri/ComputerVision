{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 Verdana-Bold;
\f3\fnil\fcharset0 Verdana;\f4\fswiss\fcharset0 Helvetica;\f5\froman\fcharset0 Palatino-Bold;
\f6\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red55\green55\blue55;\red255\green255\blue255;\red26\green26\blue26;
\red251\green0\blue7;\red37\green37\blue37;\red0\green0\blue0;\red12\green96\blue165;\red38\green38\blue38;
\red0\green0\blue255;}
{\*\expandedcolortbl;;\cssrgb\c27843\c27843\c27843;\cssrgb\c100000\c100000\c100000;\cssrgb\c13333\c13333\c13333;
\cssrgb\c100000\c0\c0;\cssrgb\c19216\c19216\c19216;\cssrgb\c0\c0\c0;\cssrgb\c0\c45882\c70588;\cssrgb\c20000\c20000\c20000;
\cssrgb\c0\c0\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid3\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid103\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid203\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid204\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2880\lin2880 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid303\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid304\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2880\lin2880 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\margl1440\margr1440\vieww26200\viewh16060\viewkind0
\deftab720
\pard\pardeftab720\sl504\partightenfactor0

\f0\b\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Adversarial Search and Games\
\pard\pardeftab720\sl414\partightenfactor0

\f1\b0\fs32 \cf4 \strokec4 \
\pard\pardeftab720\sl537\sa200\partightenfactor0

\f2\b\fs38\fsmilli19200 \cf5 \strokec5 Sudoku
\f0 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl448\sa453\partightenfactor0

\f1\b0\fs32 \cf6 \
\pard\pardeftab720\sl537\sa200\partightenfactor0

\f2\b\fs38\fsmilli19200 \cf5 \cb3 \strokec5 INSTRUCTIONS
\f0 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl448\sa453\partightenfactor0

\f3\b0\fs32 \cf7 \cb3 \strokec7 In this assignment you will create an agent to intelligently play\'a0the\'a0
\f2\b 2048-puzzle
\f3\b0 \'a0game, using more advanced techniques to probe the search space than the simple methods used in the previous assignment. If you have not played the game before, you may do so at\'a0{\field{\*\fldinst{HYPERLINK "http://gabrielecirulli.github.io/2048"}}{\fldrslt 
\f2\b \cf8 \strokec8 gabrielecirulli.github.io/2048}}\cf9 \strokec9 \'a0to get a sense of how the\cf7 \strokec7 \'a0game works. You will implement an adversarial\'a0search algorithm that plays the game intelligently, perhaps much more so\'a0than playing by hand.
\f1 \cf6 \cb1 \strokec6 \

\f3 \cf7 \cb3 \strokec7 Please read all sections of\'a0the\'a0instructions carefully.
\f1 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl448\sa453\partightenfactor0

\f2\b \cf7 \cb3 \strokec7 I.
\f3\b0 \'a0Introduction
\f1 \cf6 \cb1 \strokec6 \uc0\u8232 
\f2\b \cf7 \cb3 \strokec7 II.
\f3\b0 \'a0Algorithm\'a0Review
\f1 \cf6 \cb1 \strokec6 \uc0\u8232 
\f2\b \cf7 \cb3 \strokec7 III.
\f3\b0 \'a0Using The Skeleton Code
\f1 \cf6 \cb1 \strokec6 \uc0\u8232 
\f2\b \cf7 \cb3 \strokec7 IV.
\f3\b0 \'a0What You Need To Submit
\f1 \cf6 \cb1 \strokec6 \uc0\u8232 
\f2\b \cf7 \cb3 \strokec7 V.
\f3\b0 \'a0Important Information
\f1 \cf6 \cb1 \strokec6 \uc0\u8232 
\f2\b \cf7 \cb3 \strokec7 VI.
\f3\b0 \'a0Before You\'a0Submit
\f1 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl448\partightenfactor0

\f2\b \cf5 \cb3 \strokec7 Bonus Points:
\f3\b0 \cf7 \'a0
\f4 \cb1 \

\f2\b \cf5 \cb3 Submitting project 2 before 03/22/2020, 23:30 UTC is eligible for bonus points (we count grades on your latest submission). Due to edX policy, all assignment grades are capped at 100%.
\f4\b0 \cf7 \cb1 \
\pard\pardeftab720\sl512\sa453\partightenfactor0

\f1 \cf6 \strokec6 \
\
\pard\pardeftab720\sl448\partightenfactor0

\f2\b \cf10 \cb3 \strokec7 The assignment's final due date is 5/17/2020, 23:30 UTC.\'a0
\f4\b0 \cf7 \cb1 \
\pard\pardeftab720\sl537\sa200\partightenfactor0

\f2\b\fs38\fsmilli19200 \cf7 \cb3 I.\'a0Introduction
\f0 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl440\partightenfactor0

\f4\b0\fs32 \cf7 \strokec7 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 An instance of the 2048-puzzle game is played on a\'a0
\f2\b 4\'d74 grid
\f3\b0 , with numbered tiles that slide in all four directions when a player moves them. Every turn, a new tile will randomly appear in an empty spot on the board, with a value of either 2 or 4. Per the input direction given by the player, all tiles on the grid slide as far as possible in that direction, until they either (1) collide with\'a0another tile, or (2) collide with\'a0the edge of the grid. If two tiles of the same number collide while moving, they will merge into a single tile, valued at the sum of the two original tiles that collided. The resulting tile cannot merge with another tile again in the same move.
\f4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \
\pard\pardeftab720\sl448\qc\partightenfactor0
\cf7 \cb3 \'a0\cb1 \cb3 \'a0\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 In the first assignment, you had ample experience with the process of abstracting ideas and designing functions, classes, and data structures. The goal was to get familiar with how objects, states, nodes, functions, and implicit or\'a0explicit search trees are implemented and interact in practice. This time, the focus is strictly on the ground-level details of the algorithms.\'a0You will be provided with all the\'a0
\f2\b skeleton code
\f3\b0 \'a0necessary to get started, so that you can focus solely on optimizing your algorithm.
\f4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 With\'a0typical board games like chess, the two players in the\'a0game (i.e. the "Computer AI" and the "Player") take similar actions in their turn, and have similar objectives to achieve in the game. In the 2048-puzzle game, the setup is inherently\'a0
\f2\b asymmetric
\f3\b0 ; that is, the computer and player\'a0take drastically different actions in their turns. Specifically, the computer is responsible for placing random tiles of 2 or 4 on the board, while the player is responsible for moving the pieces. However, adversarial search can be applied to this game just the same.
\f4 \cb1 \
\pard\pardeftab720\sl537\sa200\partightenfactor0

\f2\b\fs38\fsmilli19200 \cf7 \cb3 II.\'a0Algorithm Review
\f0 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl440\partightenfactor0

\f4\b0\fs32 \cf7 \strokec7 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 Before you begin, review the lecture slides on\'a0
\f2\b adversarial search
\f3\b0 . Is this a zero-sum game? What is the minimax principle? In the 2048-puzzle game, the computer AI\'a0is technically not "adversarial". In particular, all it does is spawn random tiles of 2 and 4 each turn, with a designated probability of either a 2 or a 4; it certainly does not specifically spawn tiles at the most inopportune locations to foil the player's progress.\'a0\cf5 However, we will create a "Player AI" to play\'a0
\f2\b as if
\f3\b0 \'a0the computer is completely adversarial.\cf7 \'a0In particular, we will employ the\'a0
\f2\b minimax\'a0algorithm
\f3\b0 \'a0in this assignment.
\f4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 Remember, in game-playing we generally pick\'a0a\'a0
\f2\b strategy
\f3\b0 \'a0to employ.\'a0\cf5 With the minimax algorithm, the strategy assumes that the computer opponent is perfect\'a0in minimizing the player's outcome.\'a0Whether or not the opponent is actually perfect in doing so\'a0is another question.\cf7 \'a0As a general principle, how far the actual opponent's actual behavior deviates from the assumption certainly affects how well the AI\'a0performs [
\f2\b 1
\f3\b0 ].\'a0However, you will see that this strategy works well in this game. In this assignment, we will implement and optimize\'a0the minimax algorithm.
\f4 \cb1 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf3 \cb3 .
\f4 \cf7 \cb1 \
\pard\pardeftab720\sl448\qc\partightenfactor0

\f3 \cf7 \pard\pardeftab720\sl448\qc\partightenfactor0

\f4 \cf7 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 [
\f2\b 1
\f3\b0 ] As we saw in\'a0the case of a simple game of tic-tac-toe, it is useful to employ the minimax algorithm, which assumes that the opponent is a perfect "minimizing" agent. In practice, however, we may encounter a\'a0
\f2\b sub-par opponent
\f3\b0 \'a0that makes silly moves. When this happens,\'a0the algorithm's assumption deviates from the actual opponent's behavior. In this case, it still leads to the desired outcome of never losing. However, if\'a0the deviation goes the other way (e.g. suppose we employ a "maximax" algorithm that assumes that the opponent wants us to win), then\'a0the outcome would certainly be different.
\f4 \cb1 \
\pard\pardeftab720\sl537\sa200\partightenfactor0

\f0\b\fs38\fsmilli19200 \cf6 \strokec6 \
\
\
\pard\pardeftab720\sl537\sa200\partightenfactor0

\f2 \cf7 \cb3 \strokec7 III.\'a0Using The Skeleton Code
\f0 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl440\partightenfactor0

\f4\b0\fs32 \cf7 \strokec7 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 To let you focus on the details of the algorithm, a skeleton code is provided to help you get started, and to allow you to test your algorithm\'a0on your own. The skeleton code includes the following files. Note that you will only be working in\'a0
\f2\b one
\f3\b0 \'a0of them, and the rest of them are read-only:
\f4 \cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl448\sa226\partightenfactor0
\ls1\ilvl2
\f5\b \cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Read-only
\f3\b0 :\'a0
\f6 \cf10 \strokec10 GameManager.py
\f3 \cf7 \strokec7 . This is the driver program that\'a0loads your Computer AI and Player AI, and begins a game where they compete with each other. See below on how to execute this program.\cb1 \uc0\u8232 
\f1 \cf6 \strokec6 \
\ls1\ilvl2
\f5\b \cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Read-only
\f3\b0 :\'a0
\f6 \cf10 \strokec10 Grid.py
\f3 \cf7 \strokec7 .\'a0This module defines the Grid object, along with\'a0some useful operations:
\f6 \'a0\cf10 \strokec10 move()\cf7 \strokec7 ,\'a0\cf10 \strokec10 getAvailableCells()\cf7 \strokec7 ,\'a0\cf10 \strokec10 insertTile()
\f3 \cf7 \strokec7 , and\'a0
\f6 \cf10 \strokec10 clone()
\f3 \cf7 \strokec7 , which you may use in your code. These are available to get you started, but they are by no means the most efficient methods available. If you wish to\'a0strive for better performance, feel free to\'a0ignore these and write your own helper methods in a separate\'a0file.
\f1 \cf6 \cb1 \strokec6 \
\ls1\ilvl2
\f5\b \cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Read-only
\f3\b0 :\'a0
\f6 \cf10 \strokec10 BaseAI.py
\f3 \cf7 \strokec7 . This is the base class for any AI component. All AIs inherit from this module, and implement the\'a0
\f6 \cf10 \strokec10 getMove()
\f3 \cf7 \strokec7 \'a0function, which takes a Grid object as parameter and returns a move (there are different "moves" for different AIs).
\f1 \cf6 \cb1 \strokec6 \
\ls1\ilvl2
\f5\b \cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Read-only
\f3\b0 :\'a0
\f6 \cf10 \strokec10 ComputerAI.py
\f3 \cf7 \strokec7 .\'a0This inherits from BaseAI. The\'a0
\f6 \cf10 \strokec10 getMove()
\f3 \cf7 \strokec7 \'a0function\'a0returns a computer action that\'a0is a tuple (x, y) indicating the place you want to place a tile.
\f1 \cf6 \cb1 \strokec6 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl448\sa226\partightenfactor0
\ls1\ilvl2
\f2\b \cf5 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Writable
\f3\b0 \cf7 \strokec7 :
\f2\b \'a0
\f6\b0 \cf10 \strokec10 PlayerAI.py
\f3 \cf7 \strokec7 . You will create this file, and this is where you will be doing your work. This should\'a0inherit from BaseAI. The
\f6 \cf10 \strokec10 \'a0getMove()
\f3 \cf7 \strokec7 \'a0function, which you will need to implement, returns a number that\'a0indicates the player\'92s action. In particular, 0 stands for "Up", 1 stands for "Down", 2 stands for "Left", and 3 stands for "Right". You need to create\'a0this file and\'a0make it as intelligent as possible. You may\'a0include other files in your submission, but they will have to be included through this file.
\f1 \cf6 \cb1 \strokec6 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl448\sa226\partightenfactor0
\ls1\ilvl2
\f2\b \cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Read-only
\f3\b0 :\'a0
\f6 \cf10 \strokec10 BaseDisplayer.py
\f3 \cf7 \strokec7 \'a0and\'a0
\f6 \cf10 \strokec10 Displayer.py
\f3 \cf7 \strokec7 .\'a0These print the grid.
\f1 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf3 \cb3 \strokec7 .
\f4 \cf7 \cb1 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 To test your code, execute the game manager like so:
\f4 \cb1 \
\pard\pardeftab720\sl448\sa453\partightenfactor0

\f6 \cf10 \cb3 $ python3 GameManager.py\cf6 \cb1 \
\pard\pardeftab720\sl448\sa453\partightenfactor0

\f3 \cf7 \cb3 The progress of the game will be displayed on your terminal screen, with one snapshot printed after each\'a0move that the Computer AI or\'a0Player AI makes.\'a0The Player AI is allowed\'a0
\f2\b 0.2 seconds
\f3\b0 \'a0to come up with each move. The process continues until the game is over; that is, until no further legal\'a0moves can be made. At the end of the game, the\'a0
\f2\b maximum tile value
\f3\b0 \'a0on the board is printed.\cf5 \cb1 \uc0\u8232 
\f6 \cf6 \
\pard\pardeftab720\sl448\sa453\partightenfactor0

\f2\b \cf5 \cb3 IMPORTANT
\f3\b0 \cf7 : Do not modify the files that are specified as read-only. When your submission is graded, the grader will first automatically\'a0
\f2\b over-write
\f3\b0 \'a0all read-only files in the directory before executing your code. This is to ensure that all students are using the same game-play mechanism and computer opponent, and that you cannot "work around" the skeleton program\'a0and manually output a high score.
\f6 \cf6 \cb1 \
\pard\pardeftab720\sl537\sa200\partightenfactor0

\f2\b\fs38\fsmilli19200 \cf7 \cb3 IV.\'a0What You Need To Submit
\f0 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl440\partightenfactor0

\f4\b0\fs32 \cf7 \strokec7 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 Your job in this assignment is to write\'a0
\f6 \cf10 PlayerAI.py
\f3 \cf7 , which intelligently plays the 2048-puzzle game. Here is a snippet of\'a0
\f2\b starter code
\f3\b0 \'a0to allow you\'a0to observe how the game looks when it is played out. In the following "naive" Player AI. The\'a0
\f6 \cf10 getMove()
\f3 \cf7 \'a0function simply selects a next move in random out of the available moves:
\f4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \
\pard\pardeftab720\sl448\partightenfactor0

\f6 \cf10 \cb3 from random import randint\cf7 \cb1 \
\cf10 \cb3 from BaseAI import BaseAI\cf7 \cb1 \
\cf10 \cb3 \'a0\cf7 \cb1 \
\cf10 \cb3 class PlayerAI(BaseAI):\cf7 \cb1 \
\cf10 \cb3 def getMove(self, grid):
\f1 \cf6 \cb1 \strokec6 \

\f6 \cf10 \cb3 \strokec7 moves = grid.getAvailableMoves()
\f1 \cf6 \cb1 \strokec6 \

\f6 \cf10 \cb3 \strokec7 return moves[randint(0, len(moves) - 1)] if moves else None
\f1 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl440\partightenfactor0

\f4 \cf7 \strokec7 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 Of course, that is indeed a very naive way to play the 2048-puzzle game. If you submit this as your finished product, you will likely receive a grade of zero. You should implement your Player AI with the following points in mind:
\f4 \cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl448\sa226\partightenfactor0
\ls2\ilvl2
\f3 \cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Employ\'a0the\'a0
\f2\b minimax algorithm
\f3\b0 . This is a requirement. There are many viable strategies to beat the 2048-puzzle game, but in this assignment we will be practicing with\'a0the minimax algorithm.
\f1 \cf6 \cb1 \strokec6 \
\ls2\ilvl2
\f3 \cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Implement\'a0
\f2\b alpha-beta pruning
\f3\b0 . This is a requirement. This should speed up the search process by eliminating irrelevant branches. In this case, is\'a0there anything we can do about move ordering?
\f1 \cf6 \cb1 \strokec6 \
\ls2\ilvl2
\f3 \cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Use\'a0
\f2\b heuristic functions
\f3\b0 . What is the maximum height of the game tree? Unlike elementary games like tic-tac-toe, in this game it is highly impracticable to search the entire depth of the theoretical game tree. To be able to cut off your search at any point, you must employ\'a0
\f2\b heuristic functions
\f3\b0 \'a0to allow you to assign approximate values to nodes in the tree. Remember, the time limit allowed for each move is 0.2 seconds, so you must implement a systematic way to cut off your search\'a0before time runs out.
\f1 \cf6 \cb1 \strokec6 \
\ls2\ilvl2
\f3 \cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Assign\'a0
\f2\b heuristic weights
\f3\b0 . You will likely want to include more than one heuristic function. In that case, you will need to\'a0assign\'a0weights associated with each individual heuristic. Deciding on\'a0an appropriate set of weights will\'a0take careful reasoning, along with careful\'a0experimentation. If you feel adventurous, you can also simply write an optimization meta-algorithm to\'a0iterate over the space of weight\'a0vectors, until you arrive at results that you are happy enough with.
\f1 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl537\sa200\partightenfactor0

\f2\b\fs38\fsmilli19200 \cf7 \cb3 \strokec7 V.\'a0Important Information
\f0 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl440\partightenfactor0

\f4\b0\fs32 \cf7 \strokec7 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 Please read the following information carefully. Before you post\'a0a clarifying question on the discussion board, make sure that your question is not already answered in the following sections.
\f4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \
\pard\pardeftab720\sl448\partightenfactor0

\f2\b \cf5 \cb3 1. Note on Python 3
\f4\b0 \cf7 \cb1 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf3 \cb3 .
\f4 \cf7 \cb1 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 The current version of\'a0
\f2\b Python is 3.6.4. \'a0\'a0
\f4\b0 \cb1 \

\f3 \cb3 \'a0 \'a0
\f4 \cb1 \
\pard\pardeftab720\sl448\partightenfactor0

\f2\b \cf5 \cb3 2. Basic Requirements
\f4\b0 \cf7 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 Your submission\'a0
\f2\b must
\f3\b0 \'a0fulfill the following requirements:
\f4 \cb1 \
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl448\sa226\partightenfactor0
\ls3\ilvl3
\f3 \cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 You must use adversarial search in your PlayerAI (minimax with\'a0alpha-beta pruning).
\f1 \cb1 \
\ls3\ilvl3
\f3 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 You must provide your move within the time limit of 0.2 seconds.
\f1 \cb1 \
\ls3\ilvl3
\f3 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 You must name your file\'a0
\f6 \cf10 \strokec10 PlayerAI.py
\f3 .
\f1 \cf6 \cb1 \strokec6 \
\ls3\ilvl3
\f3 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Your grade will depend on the maximum tile values your program usually gets to.
\f1 \cb1 \
\pard\pardeftab720\sl448\partightenfactor0

\f2\b \cf5 \cb3 \strokec7 3.\'a0Grading Submissions
\f4\b0 \cf7 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \
\pard\pardeftab720\sl448\partightenfactor0

\f3 \cf7 \cb3 Grading is exceptionally\'a0straightforward\'a0for this project:
\f2\b \'a0the better your Player AI performs, the higher your grade.\'a0
\f3\b0 While this is straightforward, we admit that this Adversarial Search project is the most difficult project in this class because of its open-endedness. Your Player AI will be pitted\'a0against the standard Computer AI for a total of
\f2\b \'a010\'a0games
\f3\b0 , and the\'a0
\f2\b maximum tile value
\f3\b0 \'a0of each game will be recorded. Among the 10 runs, we pick and average\'a0
\f2\b top 5
\f3\b0 \'a0maximum tile values. Based on the average of these 5 maximum tile values, your submission will be assessed out of a total of\'a0
\f2\b 100\'a0points
\f3\b0 .
\f4 \cb1 \
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl448\sa226\partightenfactor0
\ls4\ilvl3
\f3 \cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Submissions that are no better than\'a0
\f2\b random
\f3\b0 \'a0will receive a score of zero.
\f1 \cb1 \
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl448\sa226\partightenfactor0
\ls4\ilvl3
\f2\b \cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Submissions which\'a0contains two\'a01024 runs and three 2048 runs will\'a0\cf7 \strokec7 receive full credit.
\f3\b0 \'a0For example, [256, 512, 512, 512, 1024, 1024, 1024, 2048, 2048, 2048] will receive full credit.
\f1 \cf6 \cb1 \strokec6 \
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl448\sa226\partightenfactor0
\ls4\ilvl3
\f3 \cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Submissions that fall somewhere in between will receive partial credit on a\'a0
\f2\b logarithmic
\f3\b0 \'a0scale. That is, every time you manage to double your average maximum tile value, you will be\'a0moving your final grade up\'a0in equally-spaced notches (instead of doubling as well). For other credit examples, please see Week 4 Project FAQs.
\f1 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl537\sa200\partightenfactor0

\f2\b\fs38\fsmilli19200 \cf7 \cb3 \strokec7 VI.\'a0Before You\'a0Submit
\f0 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl512\sa453\partightenfactor0

\f1\b0\fs32 \cf6 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl448\sa226\partightenfactor0
\ls5\ilvl0
\f2\b \cf5 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Make sure
\f3\b0 \cf7 \strokec7 \'a0your code\'a0executes without fail on Vocareum. In particular, make sure you name your file correctly according to the instructions\'a0specified above.
\f1 \cf6 \cb1 \strokec6 \
\ls5\ilvl0
\f2\b \cf5 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Make sure
\f3\b0 \cf7 \strokec7 \'a0your player achieves a satisfactory score on Vocareum. Your submission will be graded on the platform, where you may be allocated more or less processing power than your personal computer.
\f1 \cf6 \cb1 \strokec6 \
\ls5\ilvl0
\f2\b \cf5 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Make sure
\f3\b0 \cf7 \strokec7 \'a0your\'a0
\f6 \cf10 \strokec10 PlayerAI.py
\f3 \cf7 \strokec7 \'a0does not print anything to the screen on Vocareum. Printing gameplay progress is handled by\'a0
\f6 \cf10 \strokec10 Grid.py
\f3 \cf7 \strokec7 , and there should ideally be nothing else printed. Due to the resource-intensive nature of this assignment, there is a limit on the throughput for\'a0each user's\'a0terminal on the platform. If you exceed the limit by printing more characters than it can handle, your process may get killed while the game is in progress, which would cause problems while grading.
\f1 \cf6 \cb1 \strokec6 \
\ls5\ilvl0
\f2\b \cf5 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 You get unlimited submissions. There is a 30-minute time restriction in between submissions
\f3\b0 \cf7 \strokec7 . By hitting the "
\f2\b SUBMIT
\f3\b0 " button on Vocareum, you are committing your work as the final product, and no further changes\'a0in your code will be considered. Depending on the grading load of the platform and the effectiveness of your code, it\'a0may take up to a day for your work to be graded completely.\cb1 \uc0\u8232 \u8232 \cb3 We are allowing\'a0several attempts at\'a0submitting your final work product. This is intended to accommodate for silly mistakes or accidents, or if you suddenly discover a novel way to improve your original algorithm and averaged scores after your initial submission. However,\'a0
\f2\b please test your code extensively before you submit.
\f1\b0 \cf6 \cb1 \strokec6 \
\ls5\ilvl0
\f2\b \cf5 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Bonus Credits for Early Submission:\'a0
\f3\b0 \cf7 \'a0If you finish this project assignment before
\f2\b \cf10 \'a0March\'a022nd 2020 23:30 UTC\cf7 \'a0
\f3\b0 \'a0you will get extra credits for this homework as a bonus (we count grades on your latest submission). Due to edX policy, all assignment grades are capped at 100%.
\f1 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl537\sa200\partightenfactor0

\f2\b\fs38\fsmilli19200 \cf5 \cb3 \strokec5 USE OF VOCAREUM
\f0 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl512\sa453\partightenfactor0

\f1\b0\fs32 \cf6 \
\pard\pardeftab720\sl448\sa453\partightenfactor0

\f3 \cf6 \cb3 This assignment uses Vocareum for submission and grading. Vocareum comes equipped with an editing environment that you may use to do your development work. You are\'a0
\f2\b NOT
\f3\b0 \'a0required to use the editor. In particular, you are free to choose your favorite editor / IDE to do your development work on. When you are done with your work, you can simply upload your files onto Vocareum for\'a0submission and grading.
\f1 \cb1 \

\f3 \cb3 However, your assignments will be graded on the platform, so you\'a0
\f2\b MUST
\f3\b0 \'a0make sure that your code executes without error on the platform. In particular, do not use any additional third-party libraries and packages. We do not guarantee that they will work on the platform, even if they work on your personal computer. For the purposes of this project,\'a0everything that comes with the standard Python library should be more than sufficient.
\f1 \cb1 \
}